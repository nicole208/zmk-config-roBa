#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        ESC_ {
            bindings = <&kp ESC>;
            key-positions = <1 0>;
        };

        hyphen {
            bindings = <&kp MINUS>;
            key-positions = <9 8>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&lt_to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E             &kp R             &kp T                                             &kp Y        &kp U  &lt 5 I    &kp O    &kp P
&kp A             &kp S         &kp D             &kp F             &kp G        &kp LS(LG(S))         &kp MINUS      &kp H        &kp J  &kp K      &kp L    &kp SQT
&mt LEFT_SHIFT Z  &kp X         &kp C             &kp V             &kp B        &lt 6 TAB             &kp SEMICOLON  &kp N        &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LCTRL         &kp LEFT_ALT  &kp LEFT_COMMAND  &lt 1 LANG_HANJA  &lt 2 SPACE  &lt 3 LANG_HANGEUL    &kp BACKSPACE  &lt 2 ENTER                             &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        FUNCTION {
            bindings = <
&kp LC(Q)  &kp LC(W)  &kp LG(E)  &kp LC(R)  &kp LC(T)                         &kp LC(Y)      &kp LA(LEFT)  &mkp MB5           &kp LA(RIGHT)  &kp MINUS
&kp LC(A)  &kp LC(S)  &kp LC(D)  &kp LC(F)  &kp LC(G)  &kp HOME    &trans     &kp LC(H)      &mkp MB1      &mkp MB4           &mkp MB2       &kp EQUAL
&kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(B)  &kp END     &kp GRAVE  &kp LC(N)      &kp C_VOL_UP  &kp C_VOLUME_DOWN  &trans         &kp LC(SLASH)
&trans     &trans     &trans     &trans     &trans     &trans      &trans     &kp LG(SPACE)                                                  &to 7
            >;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8       &kp KP_NUMBER_9        &kp PLUS                                 &kp CARET         &kp LEFT           &kp UP_ARROW    &kp RIGHT        &kp RIGHT_PARENTHESIS
&kp LG(TAB)                 &kp KP_NUMBER_4  &kp DEL               &kp KP_NUMBER_6        &kp ASTERISK  &kp HOME    &kp PAGE_UP    &kp EXCLAMATION   &mkp MB1           &kp DOWN        &mkp MB2         &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp GRAVE        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PERIOD    &kp END     &kp PAGE_DOWN  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp BACKSLASH
&trans                      &trans           &trans                &trans                 &trans        &trans      &trans         &trans                                                                &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp N1          &kp NUMBER_2            &kp NUMBER_3  &kp NUMBER_4  &kp N5                    &kp NUMBER_6  &kp N7        &kp N8         &kp N9  &kp N0
&kp F1          &kp F2                  &kp F3        &kp F4        &kp F5  &trans    &trans  &kp F6        &kp F7        &kp F8         &kp F9  &kp F10
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &none         &none         &trans  &trans    &trans  &trans        &kp LG(LEFT)  &kp LG(RIGHT)  &trans  &none
&trans          &trans                  &trans        &trans        &trans  &trans    &trans  &trans                                             &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp MB1  &trans  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &kp END  &trans  &trans                    &trans    &trans  &trans  &trans  &trans
&trans  &trans  &trans   &trans  &trans  &trans    &trans  &kp HOME  &trans  &trans  &trans  &trans
&trans  &trans  &trans   &trans  &trans  &trans    &trans  &trans    &trans  &trans  &trans  &trans
&trans  &trans  &trans   &trans  &trans  &trans    &trans  &trans                            &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans    &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans    &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        Onishi_ver1 {
            bindings = <
&kp Q   &kp L   &kp U   &kp COMMA  &kp DOT                                &kp F   &kp W  &kp R  &kp Y  &kp P
&kp E   &kp I   &kp A   &kp O      &kp MINUS  &kp LS(LG(S))    &kp EQUAL  &kp K   &kp T  &kp N  &kp S  &kp H
&kp Z   &kp X   &kp C   &kp V      &kp SEMI   &kp BSLH         &kp FSLH   &kp G   &kp D  &kp M  &kp J  &kp B
&trans  &trans  &trans  &trans     &trans     &trans           &trans     &trans                       &to 0
            >;
        };
    };
};
